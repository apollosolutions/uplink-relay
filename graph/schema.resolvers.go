package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"apollosolutions/uplink-relay/config"
	"apollosolutions/uplink-relay/graph/model"
	"context"
	"fmt"
)

// DeleteCacheEntry is the resolver for the deleteCacheEntry field.
func (r *mutationResolver) DeleteCacheEntry(ctx context.Context, input model.DeleteCacheEntryInput) (*model.DeleteCacheEntryResult, error) {
	panic(fmt.Errorf("not implemented: DeleteCacheEntry - deleteCacheEntry"))
}

// PinSchema is the resolver for the pinSchema field.
func (r *mutationResolver) PinSchema(ctx context.Context, input model.PinSchemaInput) (*model.PinSchemaResult, error) {
	panic(fmt.Errorf("not implemented: PinSchema - pinSchema"))
}

// PinPersistedQueryManifest is the resolver for the pinPersistedQueryManifest field.
func (r *mutationResolver) PinPersistedQueryManifest(ctx context.Context, input model.PinPersistedQueryManifestInput) (*model.PinPersistedQueryManifestResult, error) {
	panic(fmt.Errorf("not implemented: PinPersistedQueryManifest - pinPersistedQueryManifest"))
}

// ForceUpdate is the resolver for the forceUpdate field.
func (r *mutationResolver) ForceUpdate(ctx context.Context, input *model.ForceUpdateInput) (*model.ForceUpdateResult, error) {
	userConfig, ok := ctx.Value(config.ConfigKey).(*config.Config)
	if !ok {
		return nil, fmt.Errorf("could not get config from context")
	}

	userConfig.Polling.Interval = 5
	return &model.ForceUpdateResult{
		Success: true,
		Configuration: &model.Configuration{
			Supergraphs: nil,
			URL:         "",
		},
	}, nil
}

// Health is the resolver for the health field.
func (r *queryResolver) Health(ctx context.Context) (model.HealthStatus, error) {
	return model.HealthStatusOk, nil
}

// CurrentConfiguration is the resolver for the currentConfiguration field.
func (r *queryResolver) CurrentConfiguration(ctx context.Context) (*model.Configuration, error) {
	panic(fmt.Errorf("not implemented: CurrentConfiguration - currentConfiguration"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
